name: go test

on:
  workflow_call:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v5
        with:
          go-version: stable
          check-latest: true
          cache: true
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest
          only-new-issues: true
          skip-cache: true

  unit_tests:
    name: Unit tests
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        go_version: ['oldstable', 'stable' ]

    steps:
    - uses: actions/setup-go@v5
      with:
        go-version: '${{ matrix.go_version }}'
        check-latest: true
        cache: true

    - uses: actions/checkout@v5
    - name: Run unit tests
      shell: bash
      run: go test -v -race -coverprofile="coverage-${{ matrix.os }}.${{ matrix.go_version }}.out" -covermode=atomic -coverpkg=$(go list)/... ./...

    - name: Upload coverage to codecov
      uses: codecov/codecov-action@v5
      with:
        files: './coverage-${{ matrix.os }}.${{ matrix.go_version }}.out'
        flags: '${{ matrix.go_version }}-${{ matrix.os }}'
        fail_ci_if_error: false
        verbose: true

  all_tests:
    needs: [ unit_tests ]
    name: All tests
    runs-on: ubuntu-latest
    steps:
      - name: Tests complete
        run: |
          echo "All tests completed"
